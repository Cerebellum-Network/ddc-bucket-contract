name: Build and save DDC SC binaries
on: [push]

jobs:
  build-and-save:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: x86_64-unknown-linux-gnu	
          override: true
          components: rustfmt, clippy

      - name: Build contract
        run: |
          rustup target add wasm32-unknown-unknown --toolchain nightly
          rustup component add rust-src --toolchain nightly-unknown-linux-gnu	
          sudo apt-get install binaryen
          cargo install cargo-contract --version ^0.14 --force --locked
          cargo contract build --release --manifest-path bucket/Cargo.toml

      - name: Create names linked to commit
        run: |
          ddc_contract_name=ddc.${GITHUB_SHA:0:7}.contract
          echo DDC_CONTRACT_NAME=$ddc_contract_name >> $GITHUB_ENV
          ddc_wasm_name=ddc.${GITHUB_SHA:0:7}.wasm
          echo DDC_WASM_NAME=$ddc_wasm_name >> $GITHUB_ENV
          ddc_metadata_name=ddc.${GITHUB_SHA:0:7}.json
          echo DDC_METADATA_NAME=$ddc_metadata_name >> $GITHUB_ENV
      - name: Upload contract artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DDC_CONTRACT_NAME }}
          path: ./target/ink/ddc_bucket/ddc_bucket.contract

      - name: Upload wasm artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DDC_WASM_NAME }}
          path: ./target/ink/ddc_bucket/ddc_bucket.wasm

      - name: Upload metadata artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.DDC_METADATA_NAME }}
          path: ./target/ink/ddc_bucket/metadata.json

