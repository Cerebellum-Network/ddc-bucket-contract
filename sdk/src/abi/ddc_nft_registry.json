{
  "source": {
    "hash": "0xad2cf2f6651fdac51576566664c67eb9654a1683aeef49615937eea21023f394",
    "language": "ink! 3.4.0",
    "compiler": "rustc 1.64.0-nightly"
  },
  "contract": {
    "name": "ddc_nft_registry",
    "version": "0.5.2",
    "authors": [
      "Aur√©lien Nicolas <aurel@cere.network>",
      "Anton Volk <anton.volk@cere.io>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [],
          "docs": [],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [
        {
          "args": [
            {
              "docs": [],
              "indexed": false,
              "label": "reporter_id",
              "type": {
                "displayName": [
                  "AccountId"
                ],
                "type": 3
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "nft_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "asset_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "docs": [],
              "indexed": false,
              "label": "proof",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            }
          ],
          "docs": [],
          "label": "Attach"
        }
      ],
      "messages": [
        {
          "args": [
            {
              "label": "nft_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "label": "asset_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "label": "proof",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Report and attach an asset ID to an NFT ID.",
            "",
            " All attachments are recorded as events.",
            " There is absolutely no validation, any account can \"attach\" some asset ID.",
            " Events should be filtered by reporter_id, or by analyzing the proof (not specified here).",
            "",
            " The latest attachment is also recorded in contract storage.",
            " The latest asset ID can be queried from get_by_nft_id.",
            " The first reporter for an NFT ID can also update the asset ID."
          ],
          "label": "attach",
          "mutates": true,
          "payable": true,
          "returnType": null,
          "selector": "0x82e05a4c"
        },
        {
          "args": [
            {
              "label": "nft_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "label": "asset_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            },
            {
              "label": "proof",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Report the attachment of an asset ID to an NFT ID.",
            "",
            " This is recorded only as a contract event.",
            " This can *not* be queried from get_by_nft_id.",
            "",
            " There is absolutely no validation, any account can \"report\" some asset ID.",
            " Events should be filtered by reporter_id, or by analyzing the proof (not specified here)."
          ],
          "label": "report",
          "mutates": true,
          "payable": true,
          "returnType": null,
          "selector": "0xf30f464c"
        },
        {
          "args": [
            {
              "label": "nft_id",
              "type": {
                "displayName": [
                  "String"
                ],
                "type": 1
              }
            }
          ],
          "docs": [],
          "label": "get_by_nft_id",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "AttachmentStatus"
            ],
            "type": 7
          },
          "selector": "0xb5c41aa2"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                        "ty": 0
                      }
                    },
                    "name": null
                  }
                ]
              }
            },
            "name": "attachments"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 6,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 2
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "reporter_id",
                  "type": 3,
                  "typeName": "AccountId"
                },
                {
                  "name": "nft_id",
                  "type": 1,
                  "typeName": "NftId"
                },
                {
                  "name": "asset_id",
                  "type": 1,
                  "typeName": "AssetId"
                },
                {
                  "name": "proof",
                  "type": 1,
                  "typeName": "Proof"
                }
              ]
            }
          },
          "path": [
            "ddc_nft_registry",
            "ddc_nft_registry",
            "attachment",
            "entity",
            "Attachment"
          ]
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 4,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 5
            }
          }
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 4,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "attachment",
                  "type": 2,
                  "typeName": "Attachment"
                }
              ]
            }
          },
          "path": [
            "ddc_nft_registry",
            "ddc_nft_registry",
            "attachment",
            "entity",
            "AttachmentStatus"
          ]
        }
      }
    ]
  }
}